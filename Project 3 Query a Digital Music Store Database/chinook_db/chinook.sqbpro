<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/mingt/Documents/Udacity/Business Analyst Nanodegree/Project 3 Query a Digital Music Store Database/chinook_db/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="browser structure pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="5283"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,11:mainInvoiceLine"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="84"/><column index="2" value="300"/><column index="3" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="111"/><column index="2" value="97"/><column index="3" value="105"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="167"/><column index="7" value="55"/><column index="8" value="124"/><column index="9" value="106"/><column index="10" value="165"/><column index="11" value="157"/><column index="12" value="233"/><column index="13" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Genre" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="80"/><column index="2" value="144"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="93"/><column index="2" value="111"/><column index="3" value="162"/><column index="4" value="300"/><column index="5" value="167"/><column index="6" value="109"/><column index="7" value="132"/><column index="8" value="160"/><column index="9" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="InvoiceLine" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="129"/><column index="2" value="93"/><column index="3" value="75"/><column index="4" value="88"/><column index="5" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="MediaType" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="121"/><column index="2" value="212"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Playlist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="199"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PlaylistTrack" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="75"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="75"/><column index="2" value="300"/><column index="3" value="84"/><column index="4" value="121"/><column index="5" value="80"/><column index="6" value="300"/><column index="7" value="115"/><column index="8" value="79"/><column index="9" value="88"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 3">SELECT
  Album.Title, Artist.Name, count(Invoice.InvoiceId) as copies_sold
FROM Invoice
JOIN InvoiceLine
  ON InvoiceLine.InvoiceId = Invoice.InvoiceId
JOIN Track
  ON Track.TrackId = InvoiceLine.TrackId
JOIN Album
  ON Track.AlbumId = Album.AlbumId
JOIN Artist
  ON Album.ArtistId = Artist.ArtistId
Group by Album.Title
Order BY copies_sold DESC
LIMIT 10;
</sql><sql name="SQL 4">Select 
	Genre.Name, Avg(Track.Milliseconds)/60000 as Average_Length_in_Minutes
From Track
Join Genre
	On Genre.GenreId = 	Track.GenreId
WHERE 
	Genre.Name != 'Sci Fi &amp; Fantasy' and 
	Genre.Name != 'Science Fiction' and
	Genre.Name != 'Drama' and
	Genre.Name != 'TV Shows' and
	Genre.Name != 'Comedy'  
Group by Genre.Name
Order by Average_Length_in_Minutes DESC
;

</sql><sql name="SQL 5">Select Customer.City, count(Invoice.InvoiceID) as Rock_Music_Copies

FROM Customer

JOIN Invoice
	On Customer.CustomerId = Invoice.CustomerId
	
JOIN InvoiceLine
  ON InvoiceLine.InvoiceId = Invoice.InvoiceId
  
JOIN Track
  ON Track.TrackId = InvoiceLine.TrackId
  
JOIN Genre
  ON Track.GenreId = Genre.GenreId
  
Where Genre.Name = 'Rock'

Group BY Customer.City
Order by Rock_Music_Copies DESC
limit 10;</sql><sql name="SQL 6">Select track.Name, track.Composer, count(PlaylistID) Times_Featured

From Track

Join PlaylistTrack
on Track.TrackID = PlaylistTrack.TrackId
Where track.Composer IS NOT NULL
Group by track.Composer
Order by Times_Featured Desc
LIMIT 10
;</sql><current_tab id="3"/></tab_sql></sqlb_project>
